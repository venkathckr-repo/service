name: PostgreSQL Service Test

on:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  test-postgres-service:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: mydatabase
        ports:
          - 5432:5432 # Expose port 5432 from the container to the host
        # Optional: Docker's internal health check (useful for service orchestration, but job still needs its own wait)
        options: >-
          --health-cmd pg_isready -U user -d mydatabase
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Wait for PostgreSQL service to be ready
        run: |
          echo "Waiting for PostgreSQL service to be ready..."
          max_attempts=60 # Wait for up to 60 seconds (60 * 1 second sleep)
          attempt_num=0
          while ! nc -z localhost 5432; do
            if [ $attempt_num -ge $max_attempts ]; then
              echo "Error: PostgreSQL service did not become ready within $max_attempts seconds."
              exit 1
            fi
            echo "PostgreSQL not yet ready, waiting 1 second... (attempt $((attempt_num + 1)) of $max_attempts)"
            sleep 1
            attempt_num=$((attempt_num + 1))
          done
          echo "PostgreSQL service is ready and listening on port 5432."
        shell: bash

      - name: Confirm PostgreSQL service is running and accessible
        run: |
          echo "Attempting to connect to PostgreSQL and execute a query..."
          # Install postgresql-client to use psql
          sudo apt-get update
          sudo apt-get install -y postgresql-client

          # Connect using psql and run a simple query
          # PGPASSWORD is used to pass the password non-interactively
          PGPASSWORD=${{ services.postgres.env.POSTGRES_PASSWORD }} psql \
            -h localhost \
            -p 5432 \
            -U ${{ services.postgres.env.POSTGRES_USER }} \
            -d ${{ services.postgres.env.POSTGRES_DB }} \
            -c "SELECT 1 as postgres_status;"

          if [ $? -eq 0 ]; then
            echo "Successfully connected to PostgreSQL and executed a query. PostgreSQL service is fully functional!"
          else
            echo "Failed to connect to PostgreSQL or execute a query. Check service logs."
            exit 1
          fi
        shell: bash
